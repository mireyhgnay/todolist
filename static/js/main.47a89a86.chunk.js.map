{"version":3,"sources":["components/TodoTemplate.js","TodoContext.js","components/TodoHead.js","components/TodoItem.js","components/TodoList.js","components/TodoCreate.js","App.js","index.js"],"names":["TodoTemplateBlock","styled","div","TodoTemplate","children","initialTodos","id","text","done","todoReducer","state","action","type","concat","todo","map","filter","Error","TodoStateContext","createContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","useReducer","dispatch","nextId","useRef","Provider","value","useTodoState","useContext","useTodoDispatch","TodoHeadBlock","TodoHead","undoneTasks","today","Date","dateString","toLocaleDateString","year","month","day","dayName","weekday","className","length","Remove","TodoItemBlock","CheckCircle","props","css","Text","TodoItem","onClick","TodoListBlock","TodoList","todos","CircleButton","button","open","InsertFormPositioner","InsertForm","form","Input","input","TodoCreate","useState","setOpen","setValue","onSubmit","e","preventDefault","current","autoFocus","placeholder","onChange","target","GlobalStyle","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47a89a86.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst TodoTemplateBlock = styled.div`\n  position: relative;\n  width: 500px;\n  height: 768px;\n  margin: 0 auto;\n  margin-top: 50px;\n  margin-bottom: 50px;\n  display: flex;\n  flex-direction: column;\n  background: white;\n  border-radius: 10px;\n  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.2);\n`;\n\nconst TodoTemplate = ({ children }) => {\n  return (\n    <TodoTemplateBlock>{children}</TodoTemplateBlock>\n  )\n}\n\nexport default TodoTemplate;","import React, { useReducer, createContext, useContext, useRef  } from 'react';\n\n// 초기값\nconst initialTodos = [\n  {\n    id: 1,\n    text: '아침 요가 다녀오기',\n    done: 'true'\n  },\n  {\n    id: 2,\n    text: 'React 공부하기',\n    done: 'true'\n  }\n]\n\nfunction todoReducer (state, action) {\n  switch (action.type) {\n    case 'CREATE' : \n      return state.concat(action.todo);\n    case 'TOGGLE' :\n      return state.map(todo =>\n        todo.id === action.id ? {...todo, done: !todo.done} : todo)\n    case 'REMOVE' :\n      return state.filter(todo => todo.id !== action.id) \n  \n    default:\n      throw new Error(`Unhandled action type : ${action.type}`)\n  }\n}\n\nconst TodoStateContext = createContext();\nconst TodoDispatchContext = createContext();\nconst TodoNextIdContext = createContext();\n\nexport const TodoProvider = ({ children }) => {\n  const [ state, dispatch ] = useReducer(todoReducer, initialTodos);\n  const nextId = useRef(3); // 새로운 항목을 추가할 때 사용할 고유 id \n\n  return (\n    <TodoStateContext.Provider value={state}>\n      <TodoDispatchContext.Provider value={dispatch}>\n        <TodoNextIdContext.Provider value={nextId}>\n          {children}\n        </TodoNextIdContext.Provider>\n      </TodoDispatchContext.Provider>\n    </TodoStateContext.Provider>\n  )\n}\n\nexport function useTodoState(){\n  return useContext(TodoStateContext)\n}\n\nexport function useTodoDispatch(){\n  return useContext(TodoDispatchContext)\n}\n\nexport function useTodoNextId() {\n  return useContext(TodoNextIdContext)\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { useTodoState } from '../TodoContext'\n\nconst TodoHeadBlock = styled.div`\n  padding: 20px 32px;\n  border-bottom: 1px solid #e9ecef;\n\n  h1 {\n    margin: 0;\n    font-size: 30px;\n    color: #343a40;\n  }\n  .day {\n    margin-top: 10px;\n    color: #868e96;\n    font-size: 19px;\n  }\n  .tasks-left {\n    color: #9f75c1;\n    font-size: 18px;\n    margin-top: 40px;\n    font-weight: bold;\n  }\n`;\n\nconst TodoHead = () => {\n  const todos = useTodoState();\n  const undoneTasks = todos.filter(todo => !todo.done);\n\n  const today = new Date();\n  const dateString = today.toLocaleDateString('ko-KR', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  });\n  const dayName = today.toLocaleDateString('ko-Kr', { weekday: 'long'})\n\n  return(\n    <TodoHeadBlock>\n      <h1>{dateString}</h1>\n      <div className=\"day\">{dayName}</div>\n      <div className=\"tasks-left\">할 일 {undoneTasks.length}개 남음</div>\n    </TodoHeadBlock>\n  )\n}\n\nexport default TodoHead;","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { MdDone, MdDelete } from 'react-icons/md';\nimport { useTodoDispatch } from '../TodoContext';\n\nconst Remove = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #dee2e6;\n  font-size: 24px;\n  cursor: pointer;\n  &:hover {\n    color: #9f75c1;\n  }\n  display: none;\n`;\n\nconst TodoItemBlock = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 10px 0;\n\n  &:hover {\n    ${Remove} {\n      display: initial;\n    }\n  }\n`;\n\nconst CheckCircle = styled.div`\n  width: 30px;\n  height: 30px;\n  border-radius: 12px;\n  border: 1px solid #ced4da;\n  font-size: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 20px;\n  cursor: pointer;\n\n  ${props => \n    props.done && css`\n      border: 1px solid #9f75c1;\n      color: #9f75c1;\n    `}\n`;\n\nconst Text = styled.div`\n  flex: 1;\n  font-size: 18px;\n  color: #666666;\n  ${props =>\n    props.done && css`\n      color: #ced4da;\n    `}\n`;\n\n\n\nconst TodoItem = ({ done, id, text }) => {\n  const dispatch = useTodoDispatch();\n  const onToggle = () => dispatch({ type : 'TOGGLE', id })\n  const onRemove = () => dispatch({ type : 'REMOVE', id })\n\n  return (\n    <TodoItemBlock>\n      <CheckCircle done={done} onClick={onToggle}>\n        {done && <MdDone />}\n      </CheckCircle>\n\n      <Text done={done}>{text}</Text>\n\n      <Remove onClick={onRemove}>\n        <MdDelete />\n      </Remove>\n    </TodoItemBlock>\n  )\n}\n\nexport default TodoItem;","import React from 'react';\nimport styled from 'styled-components';\nimport { useTodoState } from '../TodoContext';\nimport TodoItem from './TodoItem';\n\nconst TodoListBlock = styled.div`\n  flex: 1;\n  padding: 20px 32px 48px;\n  overflow-y: auto;\n  color: #777777;\n`;\n\nconst TodoList = () => {\n  const todos = useTodoState();\n\n  return(\n    <TodoListBlock>\n      {todos.map(todo => (\n        <TodoItem \n        key={todo.id}\n        id={todo.id}\n        text={todo.text}\n        done={todo.done}\n        />\n      ))}\n    </TodoListBlock>\n  )\n}\n\nexport default TodoList;","import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { MdAdd } from 'react-icons/md';\nimport { useTodoDispatch, useTodoNextId } from '../TodoContext';\n\nconst CircleButton = styled.button`\n  z-index: 5;\n  cursor: pointer;\n  width: 80px;\n  height: 80px;\n  display: block;\n  align-items: center;\n  justify-content: center;\n  font-size: 60px;\n  position: absolute;\n  left: 50%;\n  bottom: 0px;\n  transform: translate(-50%, 50%);\n  color: white;\n  border-radius: 50%;\n  border: none;\n  outline: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #f4a660;\n  transition: 0.125s all ease-in;\n  &:hover {\n    background: #ef9952;\n  }\n  &:active {\n    background: #9f75c1;\n  }\n  ${props => \n    props.open && css `\n      background: #966dc2;\n      &:hover {\n        background: #bb8bbe;\n      }\n      &:active {\n        background: #f4a660;\n      }\n      transform: translate(-50%, 50%) rotate(45deg);\n    `\n  }\n`;\n\nconst InsertFormPositioner = styled.div`\n  width: 100%;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n`;\n\nconst InsertForm = styled.form`\n  background: #f8f9fa;\n  padding: 32px 32px 72px;\n  border-bottom-left-radius: 16px;\n  border-bottom-right-radius: 16px;\n  border-top: 1px solid #e9ecef;\n`;\n\nconst Input = styled.input`\n  padding: 12px;\n  border-radius: 4px;\n  border: 1px solid #dee2e6;\n  width: 100%;\n  outline: none;\n  font-size: 18px;\n  box-sizing: border-box;\n`;\n\nconst TodoCreate = () => {\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState('');\n\n  const dispatch = useTodoDispatch();\n  const nextId = useTodoNextId();\n\n  const onToggle = () => setOpen(!open);\n  const onChange = e => setValue(e.target.value);\n  const onSubmit = e => {\n    e.preventDefault(); \n    dispatch({\n      type : 'CREATE',\n      todo: {\n        id: nextId.current,\n        text: value,\n        done: false\n      }\n    });\n    // 초기화\n    setValue('')\n    setOpen(false)\n    nextId.current += 1\n  }\n\n  return (\n    <>\n      { open && (\n        <InsertFormPositioner>\n          <InsertForm onSubmit={onSubmit}>\n            <Input \n            autoFocus \n            placeholder=\"할 일 입력 후, Enter를 누르세요\" \n            onChange={onChange} \n            value={value} \n            />\n          </InsertForm>\n        </InsertFormPositioner>\n      )}\n\n      <CircleButton onClick={onToggle} open={open}>\n        <MdAdd />\n      </CircleButton>\n    </>\n  )\n}\n\nexport default TodoCreate;","import React from 'react';\nimport './App.css';\nimport { createGlobalStyle } from 'styled-components'\nimport TodoTemplate from './components/TodoTemplate';\nimport TodoHead from './components/TodoHead';\nimport TodoList from './components/TodoList';\nimport TodoCreate from './components/TodoCreate';\nimport { TodoProvider } from './TodoContext'\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background-color: pink;\n  }\n`;\n\nfunction App() {\n  return (\n    <div>\n      <TodoProvider>\n        <GlobalStyle />\n\n        <TodoTemplate>\n          <TodoHead />\n          <TodoList />\n          <TodoCreate />\n        </TodoTemplate>\n        \n      </TodoProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}